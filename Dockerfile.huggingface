# Dockerfile optimized for Streamlit Dashboard deployment to Hugging Face Spaces
FROM python:3.11-slim

# Set environment variables for Streamlit
ENV STREAMLIT_HOME=/tmp \
    XDG_CONFIG_HOME=/tmp \
    XDG_CACHE_HOME=/tmp \
    STREAMLIT_DISABLE_TELEMETRY=1 \
    PYTHONPATH=/app/dashboard_online:/app \
    STREAMLIT_SERVER_PORT=8501 \
    STREAMLIT_SERVER_ADDRESS=0.0.0.0 \
    STREAMLIT_SERVER_HEADLESS=true \
    STREAMLIT_BROWSER_GATHER_USAGE_STATS=false

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq5 \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

COPY requirements.txt requirements.txt
COPY dashboard_online/ /app/dashboard_online/
COPY streamlit_app.py /app/dashboard_online/streamlit_app.py
COPY streamlit_app.py /app/streamlit_app.py
COPY .streamlit/ /app/.streamlit/
# Copy requirements and install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel
RUN pip install --no-cache-dir -r requirements.txt



# Create necessary directories and set permissions
RUN mkdir -p /tmp/.streamlit /app/logs /tmp/streamlit_cache
RUN chmod -R 755 /app
RUN chmod -R 777 /tmp


# Health check for container readiness
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8501/_stcore/health || exit 1

# Expose the port
EXPOSE 8501

# Run the application with optimized flags for Docker
CMD ["streamlit", "run", "streamlit_app.py", \
     "--server.port=8501", \
     "--server.address=0.0.0.0", \
     "--server.headless=true", \
     "--server.enableCORS=false", \
     "--server.enableXsrfProtection=false", \
     "--server.enableWebsocketCompression=false", \
     "--browser.gatherUsageStats=false"]
