services:
  postgres:
    image: postgres:14
    environment:
      - POSTGRES_DB=db
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=airflow
    volumes:
<<<<<<< HEAD
      - pgdata:/var/lib/postgresql/data
=======
      - ./database/:/var/lib/postgresql/data
>>>>>>> a1d0bee8fb0f8f41024243a6eb16e9e9547e8567
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d db -U airflow || exit 1"]
      interval: 15s
      retries: 5
    ports:
      - "5433:5432"
    restart: always

  scheduler:
<<<<<<< HEAD
    build:
      context: .
=======
    build: .
>>>>>>> a1d0bee8fb0f8f41024243a6eb16e9e9547e8567
    command: poetry run airflow scheduler
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "poetry run airflow jobs check --job-type SchedulerJob --local || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - postgres
      - social_media_tracker_db
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:$POSTGRES_PASSWORD@postgres:5432/db
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
<<<<<<< HEAD
      - PYTHONPATH=/app:/app/data_pipeline
      - WAREHOUSE_HOST=${WAREHOUSE_HOST}
      - WAREHOUSE_PORT=${WAREHOUSE_PORT}
      - WAREHOUSE_DB=${WAREHOUSE_DB}
      - WAREHOUSE_USER=${WAREHOUSE_USER}
      - WAREHOUSE_PASSWORD=${WAREHOUSE_PASSWORD}
=======
>>>>>>> a1d0bee8fb0f8f41024243a6eb16e9e9547e8567
    volumes:
      - ./dags:/app/airflow/dags
      - ./data:/app/airflow/data
      - ./logs:/app/airflow/logs
      - ./dbt_social_media_tracker:/app/airflow/dbt_social_media_tracker
      - /home/florent.bossart/.gcp_keys:/app/airflow/.gcp_keys
<<<<<<< HEAD
      - ./data_pipeline:/app/data_pipeline

  webserver:
    build:
      context: .
=======


  webserver:
    build: .
>>>>>>> a1d0bee8fb0f8f41024243a6eb16e9e9547e8567
    command: poetry run scripts/entrypoint.sh
    restart: on-failure
    depends_on:
      - postgres
      - scheduler
      - social_media_tracker_db
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:$POSTGRES_PASSWORD@postgres:5432/db
      - POSTGRES_DB=db
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=airflow
<<<<<<< HEAD
      - PYTHONPATH=/app:/app/data_pipeline
      - WAREHOUSE_HOST=${WAREHOUSE_HOST}
      - WAREHOUSE_PORT=${WAREHOUSE_PORT}
      - WAREHOUSE_DB=${WAREHOUSE_DB}
      - WAREHOUSE_USER=${WAREHOUSE_USER}
      - WAREHOUSE_PASSWORD=${WAREHOUSE_PASSWORD}
=======
>>>>>>> a1d0bee8fb0f8f41024243a6eb16e9e9547e8567
    volumes:
      - ./dags:/app/airflow/dags
      - ./data:/app/airflow/data
      - ./logs:/app/airflow/logs
<<<<<<< HEAD
      - ./data_pipeline:/app/data_pipeline
=======
>>>>>>> a1d0bee8fb0f8f41024243a6eb16e9e9547e8567
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3

  social_media_tracker_db:
    image: postgres:14
    environment:
      - POSTGRES_DB=social_db
      - POSTGRES_USER=dbt
      - POSTGRES_PASSWORD=${DBT_DB_PASSWORD}
    volumes:
<<<<<<< HEAD
      - warehousedata:/var/lib/postgresql/data
=======
      - ./data_warehouse:/var/lib/postgresql/data
>>>>>>> a1d0bee8fb0f8f41024243a6eb16e9e9547e8567
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d social_db -U dbt || exit 1"]
      interval: 15s
      retries: 5
    restart: always

<<<<<<< HEAD
=======
  # fast API used for testing
>>>>>>> a1d0bee8fb0f8f41024243a6eb16e9e9547e8567
  smt_api:
    build:
      context: .
      dockerfile: api/Dockerfile
    environment:
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
    ports:
      - "8000:8000"
    command: poetry run uvicorn api.main:app --host 0.0.0.0 --port 8000
    volumes:
      - .:/app
      - ./data:/app/data
    depends_on:
      - social_media_tracker_db
<<<<<<< HEAD

  dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:latest
    environment:
      DBT_DB_PASSWORD: ${DBT_DB_PASSWORD}
      DBT_PROFILES_DIR: /usr/app/dbt_social_media_tracker
    volumes:
      - ./dbt_social_media_tracker:/usr/app/dbt_social_media_tracker
    working_dir: /usr/app/dbt_social_media_tracker
    depends_on:
      - social_media_tracker_db
    # entrypoint: [ "tail", "-f", "/dev/null" ] # Keeps the container running for exec, or change for CLI usage

volumes:
  pgdata:
  warehousedata:
=======
>>>>>>> a1d0bee8fb0f8f41024243a6eb16e9e9547e8567
