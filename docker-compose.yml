services:
  postgres:
    image: postgres:14
    environment:
      - POSTGRES_DB=db
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=airflow
    volumes:
      - ./database/:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d db -U airflow || exit 1"]
      interval: 15s
      retries: 5
    ports:
      - "5433:5432"
    restart: always

  scheduler:
    build: .
    command: poetry run airflow scheduler
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "poetry run airflow jobs check --job-type SchedulerJob --local || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - postgres
      - social_media_tracker_db
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:$POSTGRES_PASSWORD@postgres:5432/db
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    volumes:
      - ./dags:/app/airflow/dags
      - ./data:/app/airflow/data
      - ./logs:/app/airflow/logs
      - ./dbt_social_media_tracker:/app/airflow/dbt_social_media_tracker
      - /home/florent.bossart/.gcp_keys:/app/airflow/.gcp_keys


  webserver:
    build: .
    command: poetry run scripts/entrypoint.sh
    restart: on-failure
    depends_on:
      - postgres
      - scheduler
      - social_media_tracker_db
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:$POSTGRES_PASSWORD@postgres:5432/db
      - POSTGRES_DB=db
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=airflow
    volumes:
      - ./dags:/app/airflow/dags
      - ./data:/app/airflow/data
      - ./logs:/app/airflow/logs
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3

  social_media_tracker_db:
    image: postgres:14
    environment:
      - POSTGRES_DB=social_db
      - POSTGRES_USER=dbt
      - POSTGRES_PASSWORD=${DBT_DB_PASSWORD}
    volumes:
      - ./data_warehouse:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d social_db -U dbt || exit 1"]
      interval: 15s
      retries: 5
    restart: always

  # fast API used for testing
  smt_api:
    build:
      context: .
      dockerfile: api/Dockerfile
    environment:
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
    ports:
      - "8000:8000"
    command: poetry run uvicorn api.main:app --host 0.0.0.0 --port 8000
    volumes:
      - .:/app
      - ./data:/app/data
    depends_on:
      - social_media_tracker_db
